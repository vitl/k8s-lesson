- hosts: all
  become: yes
  tasks:
    - name: load overlay module
      modprobe:
        name: overlay
        state: present

    - name: load br_netfilter module
      modprobe:
        name: br_netfilter
        state: present

    - name: configure loading kernel modules
      copy:
        dest: "/etc/modules-load.d/containerd.conf"
        content: |
          overlay
          br_netfilter

    - name: configure network keys for kubernetes
      copy:
        dest: "/etc/sysctl.d/kubernetes.conf"
        content: |
          net.bridge.bridge-nf-call-ip6tables = 1
          net.bridge.bridge-nf-call-iptables = 1
          net.ipv4.ip_forward = 1

    - name: apply configure network keys
      shell: sysctl --system

    - name: Add Docker GPG key
      apt_key: url=https://download.docker.com/linux/ubuntu/gpg

    - name: Add Docker APT repository
      apt_repository:
        repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ansible_distribution_release}} stable

    - name: install curl
      apt:
        name: curl 
        state: present
        update_cache: true

    - name: install gnupg2
      apt:
        name: gnupg2
        state: present

    - name: install software-properties-common
      apt:
        name: software-properties-common
        state: present

    - name: install APT Transport HTTPS
      apt:
        name: apt-transport-https
        state: present

    - name: install ca-certificates
      apt:
        name: ca-certificates
        state: present

    - name: install containerd.io
      apt:
        name: containerd.io
        state: present

    - name: save containerd config
      shell: containerd config default | sudo tee /etc/containerd/config.toml >/dev/null 2>&1

    - name: save containerd config
      shell: sed -i 's/SystemdCgroup \= false/SystemdCgroup \= true/g' /etc/containerd/config.toml

    - name: Restart service containerd, in all cases
      ansible.builtin.systemd:
        name: containerd.service
        state: restarted
        enabled: yes

    - name: add Kubernetes apt-key
      apt_key:
        url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
        state: present

    - name: add Kubernetes' APT repository
      apt_repository:
        repo: deb http://apt.kubernetes.io/ kubernetes-xenial main
        state: present
        filename: 'kubernetes'

    - name: install kubelet
      apt:
        name: kubelet=1.26.0-00
        state: present
        update_cache: true

    - name: install kubeadm
      apt:
        name: kubeadm=1.26.0-00
        state: present

- hosts: control_plane
  become: yes
  tasks:
  - name: install kubectl
    apt:
      name: kubectl=1.26.0-00
      state: present
      force: yes
  - name: Install bash-completion
    apt:
      name: bash-completion 
      state: present
  - name: install kubectl completion for bash
    shell:
      cmd: kubectl completion bash > /etc/bash_completion.d/kubectl
      # If you do not want to run this when the file already exists, add
      creates: /etc/bash_completion.d/kubectl